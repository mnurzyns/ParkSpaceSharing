name: CI
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - main
      - develop

env:
  # Conan cache environment variables
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"
  CTEST_OUTPUT_ON_FAILURE: 1
  ASAN_OPTIONS: "detect_stack_use_after_return=false"

jobs:
  changes:
    name: Check for changes
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: read
    outputs:
      cxx: ${{ steps.changes.outputs.cxx }}
    steps:
      - uses: actions/checkout@v3

      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: .github/filters.yaml

  ci:
    name: CI
    needs: changes
    if: ${{ needs.changes.outputs.cxx == 'true' && ( github.event_name == 'push' || !github.event.pull_request.draft ) }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-22.04
          - macos-12
        compiler:
          - llvm-15.0.0 # llvm-15 only on macOS
          - gcc-12
        generator:
          - "Ninja Multi-Config"
        build_type:
          - Release
          - Debug

        exclude:
          - os: macos-12
            compiler: gcc-12
          - os: ubuntu-22.04
            compiler: llvm-15.0.0

        include:
          - os: windows-2022
            compiler: msvc
            generator: "Visual Studio 17 2022"
            build_type: Debug

          - os: windows-2022
            compiler: msvc
            generator: "Visual Studio 17 2022"
            build_type: Release

    steps:
      - uses: actions/checkout@v3

      - name: Setup Cache
        uses: ./.github/actions/setup_cache
        with:
          compiler: ${{ matrix.compiler }}
          build_type: ${{ matrix.build_type }}
          generator: ${{ matrix.generator }}

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows' )}}
          cmake: true
          ninja: true
          conan: "1.59.0"
          vcpkg: false
          ccache: true
          clangtidy: false

      - name: Cleanup Conan system packages (they are not properly cached)
        run: |
          conan remove -f '*/system'

      - name: Configure CMake
        run: |
          cmake -S "${{github.workspace}}" -B ${{github.workspace}}/build -G "${{matrix.generator}}" -DCMAKE_BUILD_TYPE:STRING="${{matrix.build_type}}" -DCONAN:BOOL=ON

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: |
          ctest --verbose -C ${{matrix.build_type}}
